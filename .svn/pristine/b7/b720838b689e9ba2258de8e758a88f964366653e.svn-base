bigapple框架升级说明
========================

version = 1.0.0 (2013-04-23)

初始版本
1、添加了世界上最小的IOC框架 （徐安）
（1）可使用InjectView注入View
（2）使用InjectParamThis注入数据库dao
========================================================================================================================
version = 1.0.1 (2013-04-23)

1、添加耗时操作的模板方式框架添加，asynctask模块（徐安）
（1）继承AbstractTask就可以轻松实现耗时操作+UI更新。
========================================================================================================================
version = 1.0.2 (2013-04-24)

1、添加本地数据库的封装，db模块（徐安）
（1）DBHelper.init初始化数据库版本后。会自动执行asset目录下的sql文件。对此可以用来升级语法。
（2）继承BasicDaoAdapter类，可使用系统自带API进行数据库操作。
========================================================================================================================
version = 1.0.3 (2013-04-24)

1、添加utils模块  （徐安）
（1）添加了常用的一些工具类。
========================================================================================================================
version = 1.0.4 (2013-05-02)

1、添加更新apk程序工具，utils模块中的update（徐安）
========================================================================================================================
version = 1.0.5 (2013-05-02)

1、添加了录音和播音工具，media模块  （徐安）
（1）可使用MediaPlayerModel类快捷播放音频文件。
（2）可使用MediaRecorderModel类快捷录音。
========================================================================================================================
version = 1.0.6 (2013-05-04)

1、一些BUG的修改（徐安）
（1）修复测试SqlCreator类适应安卓查询条件只能是String的BUG，并修整去掉一些万年不用的方法。
（2）修复测试BasicDaoAdapter中查询方法的BUG。
（3）添加数据操作基类BasicDao，继承BasicDao类，可以轻松操作数据库的增删改查，API参考keel的BasicJdbcDao。并且不用显示close关掉数据源。
（4）修整了Validators，并去掉一些过期方法和不常用的方法。Validators本身来自keel。
========================================================================================================================
version = 1.0.7 (2013-05-06)

1、添加http封装：包http。
（1）对http的一种ajax写法封装。不过可以更具自己的喜好选择http封装类，本身框架还有一个HttpUtils工具类的。后者更加轻量级，调用简单。（徐安）
========================================================================================================================
version = 1.0.8 (2013-05-17)

1、修改BasicDao类
（1）添加了updateBatch批量更新方法，并可以获取原生的sqliteDatabase对象，可让使用者灵活使用（徐安）
========================================================================================================================
version = 1.0.9 (2013-07-3)

1、修改合并一些代码（徐安）
（1）删除http包，感觉还是直接用HttpUtils配合asynctask包的功能，来的简单实在。而且http包也没有经过严格的测试。
（2）合并DialUtils类和SmsSendUtils类到ActionUtils类。
========================================================================================================================
version = 1.1.0 (2013-07-11)

1、修改耗时工具类
（1）使其可以自定义设置progressDialog对象，使用更加灵活。（徐安）
========================================================================================================================
version = 1.1.1 (2013-08-20)

1、缓存部分修改
（2）废弃原来的缓存，使用LruCache缓存实现缓存。这个缓存拷贝来自安卓API高版本中自带实现的源码。相对来说牛逼一点。（徐安）
========================================================================================================================
version = 1.1.2 (2013-08-21)

1、添加加载网络图片模块
（1）可使用AnBitmapUtils来快速加载网络的图片。强劲的地方在于：不用考虑OOM问题。不用考虑快速切换卡顿问题。不用考虑图片缓存问题。
总之什么都不用考虑。只要准备要显示的ImageView对象和图片的加载地址。
（2）可使用BitmapGlobalConfig灵活配置。通过AnBitmapUtils对象来设置BitmapGlobalConfig的配置。参考开源：xutils框架。

2、添加http模块（徐安）
（1）可使用AnHttpUtils实现get、post、下载、上传等操作，参考开源afinal。
（2）HttpUtils类依然存在。引入此模块，只是可以使用该模块上传文件。而这一点HttpUtils类是做不到的。但一些基本的简单网络请求，还是可以使用HttpUtils类操作。
这个是封装了安卓自带的HttpClient，HttpUtils中的部分方法是封装了HttpURLConnection。虽然google建议使用HttpURLConnection，但目前来
看HttpClient还是比HttpURLConnection更高效稳定的。
========================================================================================================================
version = 1.1.3 (2013-09-03)

修改media包（徐安）
（1）添加了setMediaPlayer、release等方法，是构建更加灵活。
========================================================================================================================
version = 1.1.4 (2013-09-11)

1、添加附加功能：（徐安）
（1）ContextUtils添加获取SD目录方法：getSdCardPath。添加获取手机自身存贮目录方法：getCacheDirPath
（2）在StringUtils中添加了一些常用方法，（参考apache开源的lang部分）
（3）灵活了asyntask设置配置。可以自定义设置提示框的提示信息。是否允许用户取消。提示消息。

2、添加了IO基本的文件操作能力（徐安）
（1）添加io下的IOUtils、FileUtils、Charsets。可以使用FileUtils快速的读写文件。（参考apache开源的io部分）
========================================================================================================================
version = 1.1.5 (2013-09-12)

1、修改更新程序模块
（1）废弃了UpdateManager中NotifyCanGotoListener接口的使用。据同事说这个接口太霸气，力度太大。
（2）添加UpdateOkListener和UpdateCancelListener接口使用。作为上面替代品。UpdateCancelListener约等于NotifyCanGotoListener接口的使用。
但比后者力度更小。它能区分是用户主动放弃更新还是由于外力因素而更新失败的。UpdateOkListener主要能检测到使用点击确定更新操作。在这个接口
中系统可以做一些收尾操作。还可以返回false终止程序更新。
（3）优化配置，省去冗余的参数。把参数下放到方法处。
（4）在下载中，支持用户取消操作。

2、添加日志工具
（1）对安卓自带的Log类做了简单的封装。可对其进行设置各种级别的日志是否输出。在Log基础下，可免输入TAG，TAG由对线程调用栈的跟踪。
自动生成一个更友好的TAG。自动生成的TAG格式为：类名[方法名， 调用处代码行数]。这样查看日志可很方便的定位。同时发布状态的程序，可
考虑屏蔽d等级别的日志输出。

3、修改bitmap网络加载图片模块
（1）添加了AfterClearCacheListener接口。顾名思义，就是刷新缓存之后的回调监听。因为刷新缓存涉及到磁盘操作，所以是异步的。
有时候我们想刷新缓存之后更新一些UI，那就可以设置这个监听。由于提供AnBitmapUtils单例的存在。所以AfterClearCacheListener
在被回调一次后自动设置成null，以免影响到别的操作，每次需要监听的时候设置一次即可。
========================================================================================================================
version = 1.1.6 (2013-09-17)

1、修改一些方法名
（1）AbstractTask中，title删除改成progressTitle，让其名字比较直接。
（2）ContextUtils中添加getExternalCacheDirPath外部缓存路径获取和getFileDirPath内置存储路径

2、bitmap模块的修改
（1）对bitmap进行了天翻地覆的修改，然后带来的当然是性能的大幅提升和API的更加简洁

3、修整了缓存部分
（1）全新的缓存出炉了，从utils中分离，成为了与bitmap并肩的大模块。暂时只提供了内存缓存接口。后续添加磁盘缓存接口。
========================================================================================================================
version = 1.1.7 (2013-09-22)

1、修整了缓存部分
（1）全新的缓存出炉了，从utils中分离，成为了与bitmap并肩的大模块。暂时只提供了内存缓存接口。后续添加磁盘缓存接口。

2、修改StringUtils
添加了join的另一个复写方法。
========================================================================================================================
version = 1.1.8 (2013-09-26)

1、修改缓存cache部分
（1）使用了bitmap中的缓存，可以支持设置缓存的过期时间

2、修复AbstractTask
（1）默认提示框可取消

========================================================================================================================
version = 1.1.9 (...)

1、修改ContextUtils
（1）添加方法hasSimCard方法，判断是否有sim卡存在
========================================================================================================================